function[] = vMMN_reref_epoch
%****************************************************************************%
% This function assumes that the user has already manully removed junk and
% "crazy" segments of the continuous data file (e.g., from breaks), and has
% manually interpolated any bad electrodes. It then creates bipolar VEOG
% channels, an average scalp reference and epochs the data using ERPlab
% functions.
%****************************************************************************%
% Matt Euler, Fall 2018, adapting EEGlab and ERPlab functions

%% set up to find the file we want

[ALLEEG EEG CURRENTSET ALLCOM] = eeglab; 
% cd into the SET file directory
cd('C:\Users\...SET_files');
datainfo.SID = input('Enter the Subject Name, e.g., AJA27  ', 's');
thisdir = dir; %get the contents of the directory
index = find(strcmp({thisdir.name}, datainfo.SID)); % find the index for this subjects' folder
cd(thisdir(index).name); % cd into said folder
datainfo.savdir = pwd; % set that folder as the save directory

%% Load the dataset (assumes that the user has done some manual cleaning already)

tmp = dir(strcat('*', datainfo.SID, '*', '_car.set')); % find the file we want (ending in car.set)
datainfo.origname = tmp.name; % just take the filename
EEG = pop_loadset('filename',datainfo.origname,'filepath',datainfo.savdir); % load the file
[ALLEEG, EEG, CURRENTSET] = eeg_store( ALLEEG, EEG, 0 );
EEG = eeg_checkset( EEG );

%% create L and R VEOG channels

EEG = pop_eegchanoperator( EEG, {  'nch1 = ch1 Label FP1',  'nch2 = ch2 Label FP2',  'nch3 = ch3 Label F7',  'nch4 = ch4 Label F3',...
  'nch5 = ch5 Label Fz',  'nch6 = ch6 Label F4',  'nch7 = ch7 Label F8',  'nch8 = ch8 Label FC5',  'nch9 = ch9 Label FC1',  'nch10 = ch10 Label FC2',...
  'nch11 = ch11 Label FC6',  'nch12 = ch12 Label T7',  'nch13 = ch13 Label C3',  'nch14 = ch14 Label Cz',  'nch15 = ch15 Label C4',...
  'nch16 = ch16 Label T8',  'nch17 = ch17 Label M1',  'nch18 = ch18 Label CP5',  'nch19 = ch19 Label CP1',  'nch20 = ch20 Label CP2',  'nch21 = ch21 Label CP6',...
  'nch22 = ch22 Label M2',  'nch23 = ch23 Label P7',  'nch24 = ch24 Label P3',  'nch25 = ch25 Label Pz',  'nch26 = ch26 Label P4',...
  'nch27 = ch27 Label P8',  'nch28 = ch28 Label PO9',  'nch29 = ch29 Label O1',  'nch30 = ch30 Label Oz',  'nch31 = ch31 Label O2',...
  'nch32 = ch32 Label PO10',  'nch33 = ch33 Label AF7',  'nch34 = ch34 Label AF3',  'nch35 = ch35 Label AF4',  'nch36 = ch36 Label AF8',...
  'nch37 = ch37 Label F5',  'nch38 = ch38 Label F1',  'nch39 = ch39 Label F2',  'nch40 = ch40 Label F6',  'nch41 = ch41 Label SO1',  'nch42 = ch42 Label FT7',...
  'nch43 = ch43 Label FC3',  'nch44 = ch44 Label FC4',  'nch45 = ch45 Label FT8',  'nch46 = ch46 Label SO2',  'nch47 = ch47 Label C5',...
  'nch48 = ch48 Label C1',  'nch49 = ch49 Label C2',  'nch50 = ch50 Label C6',  'nch51 = ch51 Label TP7',  'nch52 = ch52 Label CP3',...
  'nch53 = ch53 Label CPz',  'nch54 = ch54 Label CP4',  'nch55 = ch55 Label TP8',  'nch56 = ch56 Label P5',  'nch57 = ch57 Label P1',  'nch58 = ch58 Label P2',...
  'nch59 = ch59 Label P6',  'nch60 = ch60 Label PO7',  'nch61 = ch61 Label PO3',  'nch62 = ch62 Label POz',  'nch63 = ch63 Label PO4',...
  'nch64 = ch64 Label PO8',  'nch65 = ch1 - ch41 label LVEOG',  'nch66 = ch2 - ch46 label RVEOG'} , 'ErrorMsg', 'popup', 'Warning',...
 'on' ); % GUI: 19-Oct-2018 11:04:23

%% Re-reference the data to the average of all scalp channels

EEG = pop_eegchanoperator( EEG, {  'nch1 = ch1 - ( avgchan( 1:40 42:45 47:64) ) Label FP1',  'nch2 = ch2 - ( avgchan( 1:40 42:45 47:64) ) Label FP2',...
  'nch3 = ch3 - ( avgchan( 1:40 42:45 47:64) ) Label F7',  'nch4 = ch4 - ( avgchan( 1:40 42:45 47:64) ) Label F3',...
  'nch5 = ch5 - ( avgchan( 1:40 42:45 47:64) ) Label Fz',  'nch6 = ch6 - ( avgchan( 1:40 42:45 47:64) ) Label F4',  'nch7 = ch7 - ( avgchan( 1:40 42:45 47:64) ) Label F8',...
  'nch8 = ch8 - ( avgchan( 1:40 42:45 47:64) ) Label FC5',  'nch9 = ch9 - ( avgchan( 1:40 42:45 47:64) ) Label FC1',...
  'nch10 = ch10 - ( avgchan( 1:40 42:45 47:64) ) Label FC2',  'nch11 = ch11 - ( avgchan( 1:40 42:45 47:64) ) Label FC6',  'nch12 = ch12 - ( avgchan( 1:40 42:45 47:64) ) Label T7',...
  'nch13 = ch13 - ( avgchan( 1:40 42:45 47:64) ) Label C3',  'nch14 = ch14 - ( avgchan( 1:40 42:45 47:64) ) Label Cz',...
  'nch15 = ch15 - ( avgchan( 1:40 42:45 47:64) ) Label C4',  'nch16 = ch16 - ( avgchan( 1:40 42:45 47:64) ) Label T8',...
  'nch17 = ch17 - ( avgchan( 1:40 42:45 47:64) ) Label M1',  'nch18 = ch18 - ( avgchan( 1:40 42:45 47:64) ) Label CP5',  'nch19 = ch19 - ( avgchan( 1:40 42:45 47:64) ) Label CP1',...
  'nch20 = ch20 - ( avgchan( 1:40 42:45 47:64) ) Label CP2',  'nch21 = ch21 - ( avgchan( 1:40 42:45 47:64) ) Label CP6',...
  'nch22 = ch22 - ( avgchan( 1:40 42:45 47:64) ) Label M2',  'nch23 = ch23 - ( avgchan( 1:40 42:45 47:64) ) Label P7',...
  'nch24 = ch24 - ( avgchan( 1:40 42:45 47:64) ) Label P3',  'nch25 = ch25 - ( avgchan( 1:40 42:45 47:64) ) Label Pz',  'nch26 = ch26 - ( avgchan( 1:40 42:45 47:64) ) Label P4',...
  'nch27 = ch27 - ( avgchan( 1:40 42:45 47:64) ) Label P8',  'nch28 = ch28 - ( avgchan( 1:40 42:45 47:64) ) Label PO9',...
  'nch29 = ch29 - ( avgchan( 1:40 42:45 47:64) ) Label O1',  'nch30 = ch30 - ( avgchan( 1:40 42:45 47:64) ) Label Oz',...
  'nch31 = ch31 - ( avgchan( 1:40 42:45 47:64) ) Label O2',  'nch32 = ch32 - ( avgchan( 1:40 42:45 47:64) ) Label PO10',  'nch33 = ch33 - ( avgchan( 1:40 42:45 47:64) ) Label AF7',...
  'nch34 = ch34 - ( avgchan( 1:40 42:45 47:64) ) Label AF3',  'nch35 = ch35 - ( avgchan( 1:40 42:45 47:64) ) Label AF4',...
  'nch36 = ch36 - ( avgchan( 1:40 42:45 47:64) ) Label AF8',  'nch37 = ch37 - ( avgchan( 1:40 42:45 47:64) ) Label F5',...
  'nch38 = ch38 - ( avgchan( 1:40 42:45 47:64) ) Label F1',  'nch39 = ch39 - ( avgchan( 1:40 42:45 47:64) ) Label F2',  'nch40 = ch40 - ( avgchan( 1:40 42:45 47:64) ) Label F6',...
  'nch41 = ch41 Label SO1',  'nch42 = ch42 - ( avgchan( 1:40 42:45 47:64) ) Label FT7',  'nch43 = ch43 - ( avgchan( 1:40 42:45 47:64) ) Label FC3',...
  'nch44 = ch44 - ( avgchan( 1:40 42:45 47:64) ) Label FC4',  'nch45 = ch45 - ( avgchan( 1:40 42:45 47:64) ) Label FT8',...
  'nch46 = ch46 Label SO2',  'nch47 = ch47 - ( avgchan( 1:40 42:45 47:64) ) Label C5',  'nch48 = ch48 - ( avgchan( 1:40 42:45 47:64) ) Label C1',...
  'nch49 = ch49 - ( avgchan( 1:40 42:45 47:64) ) Label C2',  'nch50 = ch50 - ( avgchan( 1:40 42:45 47:64) ) Label C6',...
  'nch51 = ch51 - ( avgchan( 1:40 42:45 47:64) ) Label TP7',  'nch52 = ch52 - ( avgchan( 1:40 42:45 47:64) ) Label CP3',  'nch53 = ch53 - ( avgchan( 1:40 42:45 47:64) ) Label CPz',...
  'nch54 = ch54 - ( avgchan( 1:40 42:45 47:64) ) Label CP4',  'nch55 = ch55 - ( avgchan( 1:40 42:45 47:64) ) Label TP8',...
  'nch56 = ch56 - ( avgchan( 1:40 42:45 47:64) ) Label P5',  'nch57 = ch57 - ( avgchan( 1:40 42:45 47:64) ) Label P1',...
  'nch58 = ch58 - ( avgchan( 1:40 42:45 47:64) ) Label P2',  'nch59 = ch59 - ( avgchan( 1:40 42:45 47:64) ) Label P6',  'nch60 = ch60 - ( avgchan( 1:40 42:45 47:64) ) Label PO7',...
  'nch61 = ch61 - ( avgchan( 1:40 42:45 47:64) ) Label PO3',  'nch62 = ch62 - ( avgchan( 1:40 42:45 47:64) ) Label POz',...
  'nch63 = ch63 - ( avgchan( 1:40 42:45 47:64) ) Label PO4',  'nch64 = ch64 - ( avgchan( 1:40 42:45 47:64) ) Label PO8',  'nch65 = ch65 Label LVEOG',...
  'nch66 = ch66 Label RVEOG'} , 'ErrorMsg', 'popup', 'Warning', 'on' ); % GUI: 19-Oct-2018 11:12:42

%% Create Bins, epoch, baseline-correct, detrend the epochs and save

% create the eventlist
EEG  = pop_creabasiceventlist( EEG , 'AlphanumericCleaning', 'on', 'BoundaryNumeric', { -99 }, 'BoundaryString',...
 { 'boundary' } ); % GUI: 19-Oct-2018 16:16:25
[ALLEEG EEG CURRENTSET] = pop_newset(ALLEEG, EEG, 1,'overwrite','on','gui','off');

% point ERPlab to the Bin Descriptor File
BDFpath = 'C:\Users\***\Documents\***\vMMN_BDF_IQ.txt';
EEG  = pop_binlister( EEG , 'BDF', BDFpath, 'IndexEL',  1, 'SendEL2', 'EEG', 'UpdateEEG', 'on', 'Voutput', 'EEG' ); 
[ALLEEG EEG] = eeg_store(ALLEEG, EEG, CURRENTSET);


% epoch all Bins from -100 to +400 relative to time-locking event; 
EEG = pop_epochbin( EEG , [-100.0  400.0],  'none');
%DONT BASELINE !EEG = pop_epochbin( EEG , [-100.0  400.0],  'pre');

% detrend the data 
EEG = pop_eeglindetrend( EEG, 'all' ); % GUI: 23-Oct-2018 10:50:15

% baseline correct from -100 to 0 ms (have to use the EEGlab stand-alone function for this) 
EEG = pop_rmbase( EEG, [-100    0]);
[ALLEEG EEG] = eeg_store(ALLEEG, EEG, CURRENTSET);
EEG = eeg_checkset( EEG );

% rename and save the dataset
orig = datainfo.origname(1:end-4);
EEG.setname= strcat(orig, '_VEOG_AVGref_ep_dtrnd_BL');
EEG = eeg_checkset( EEG );
EEG = pop_saveset( EEG, 'filename',EEG.setname,'filepath',datainfo.savdir);

% ************* RATIONALE FOR EPOCHING *************************************
% With 800 ms between pairs and 300 ms within pairs, 500 ms epochs should
% prevent other stimuli being included regardless of whether we timelock to
% the first or second position
% **************************************************************************

%% Manual tasks start again here

% play a beep;
% res = 22050;
% len = 0.07 * res;
% hz = 250;
% sound( sin( hz*(2*pi*(0:len)/res) ), res);

disp('User needs to:')
disp('(1) Remove blinks via a step-function on the VEOG chans')
disp('(2) Remove other bad trials via a moving window')
disp('(3) create an ERPset, delete VEOG chans (41, 46, 65, 66), and save')
 keyboard;

% %% Remove blinks via the step-function operating on the VEOG chans only
% EEG  = pop_artstep( EEG , 'Channel', [ 65 66], 'Flag',  1, 'Threshold',  60, 'Twindow', [ -100 399], 'Windowsize',  100, 'Windowstep',...
%   50 ); % GUI: 29-Oct-2018 11:45:22



end